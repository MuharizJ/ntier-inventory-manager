//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AFLStock_Model", "FK_SalesOrder_Customer", "Customer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AFLStock.DAL.EF.Customer), "SalesOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AFLStock.DAL.EF.SalesOrder), true)]
[assembly: EdmRelationshipAttribute("AFLStock_Model", "FK_PurchaseLog_PurchaseOrder", "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AFLStock.DAL.EF.PurchaseOrder), "PurchaseLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AFLStock.DAL.EF.PurchaseLog), true)]
[assembly: EdmRelationshipAttribute("AFLStock_Model", "FK_PurchaseLog_StockItemMaster", "StockItemMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AFLStock.DAL.EF.StockItemMaster), "PurchaseLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AFLStock.DAL.EF.PurchaseLog), true)]
[assembly: EdmRelationshipAttribute("AFLStock_Model", "FK_PurchaseOrder_Supplier", "Supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AFLStock.DAL.EF.Supplier), "PurchaseOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AFLStock.DAL.EF.PurchaseOrder), true)]
[assembly: EdmRelationshipAttribute("AFLStock_Model", "FK_SalesLog_SalesOrder", "SalesOrder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AFLStock.DAL.EF.SalesOrder), "SalesLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AFLStock.DAL.EF.SalesLog), true)]
[assembly: EdmRelationshipAttribute("AFLStock_Model", "FK_SalesLog_StockItemMaster", "StockItemMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AFLStock.DAL.EF.StockItemMaster), "SalesLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AFLStock.DAL.EF.SalesLog), true)]
[assembly: EdmRelationshipAttribute("AFLStock_Model", "FK_StockItemMaster_StockCategory", "StockCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AFLStock.DAL.EF.StockCategory), "StockItemMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AFLStock.DAL.EF.StockItemMaster), true)]
[assembly: EdmRelationshipAttribute("AFLStock_Model", "FK_StockItemDetail_StockItemMaster", "StockItemMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AFLStock.DAL.EF.StockItemMaster), "StockItemDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AFLStock.DAL.EF.StockItemDetail), true)]
[assembly: EdmRelationshipAttribute("AFLStock_Model", "FK_StockItemMaster_UnitType", "UnitType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AFLStock.DAL.EF.UnitType), "StockItemMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AFLStock.DAL.EF.StockItemMaster), true)]
[assembly: EdmRelationshipAttribute("AFLStock_Model", "FK_ItemGroups_Groups", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AFLStock.DAL.EF.Group), "ItemGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AFLStock.DAL.EF.ItemGroup), true)]
[assembly: EdmRelationshipAttribute("AFLStock_Model", "FK_ItemGroups_StockItemMaster", "StockItemMaster", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AFLStock.DAL.EF.StockItemMaster), "ItemGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AFLStock.DAL.EF.ItemGroup), true)]

#endregion

namespace AFLStock.DAL.EF
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AFLStock_Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AFLStock_Entities object using the connection string found in the 'AFLStock_Entities' section of the application configuration file.
        /// </summary>
        public AFLStock_Entities() : base("name=AFLStock_Entities", "AFLStock_Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AFLStock_Entities object.
        /// </summary>
        public AFLStock_Entities(string connectionString) : base(connectionString, "AFLStock_Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AFLStock_Entities object.
        /// </summary>
        public AFLStock_Entities(EntityConnection connection) : base(connection, "AFLStock_Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseLog> PurchaseLogs
        {
            get
            {
                if ((_PurchaseLogs == null))
                {
                    _PurchaseLogs = base.CreateObjectSet<PurchaseLog>("PurchaseLogs");
                }
                return _PurchaseLogs;
            }
        }
        private ObjectSet<PurchaseLog> _PurchaseLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseOrder> PurchaseOrders
        {
            get
            {
                if ((_PurchaseOrders == null))
                {
                    _PurchaseOrders = base.CreateObjectSet<PurchaseOrder>("PurchaseOrders");
                }
                return _PurchaseOrders;
            }
        }
        private ObjectSet<PurchaseOrder> _PurchaseOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesLog> SalesLogs
        {
            get
            {
                if ((_SalesLogs == null))
                {
                    _SalesLogs = base.CreateObjectSet<SalesLog>("SalesLogs");
                }
                return _SalesLogs;
            }
        }
        private ObjectSet<SalesLog> _SalesLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SalesOrder> SalesOrders
        {
            get
            {
                if ((_SalesOrders == null))
                {
                    _SalesOrders = base.CreateObjectSet<SalesOrder>("SalesOrders");
                }
                return _SalesOrders;
            }
        }
        private ObjectSet<SalesOrder> _SalesOrders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StockCategory> StockCategories
        {
            get
            {
                if ((_StockCategories == null))
                {
                    _StockCategories = base.CreateObjectSet<StockCategory>("StockCategories");
                }
                return _StockCategories;
            }
        }
        private ObjectSet<StockCategory> _StockCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StockItemDetail> StockItemDetails
        {
            get
            {
                if ((_StockItemDetails == null))
                {
                    _StockItemDetails = base.CreateObjectSet<StockItemDetail>("StockItemDetails");
                }
                return _StockItemDetails;
            }
        }
        private ObjectSet<StockItemDetail> _StockItemDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StockItemMaster> StockItemMasters
        {
            get
            {
                if ((_StockItemMasters == null))
                {
                    _StockItemMasters = base.CreateObjectSet<StockItemMaster>("StockItemMasters");
                }
                return _StockItemMasters;
            }
        }
        private ObjectSet<StockItemMaster> _StockItemMasters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier> Suppliers
        {
            get
            {
                if ((_Suppliers == null))
                {
                    _Suppliers = base.CreateObjectSet<Supplier>("Suppliers");
                }
                return _Suppliers;
            }
        }
        private ObjectSet<Supplier> _Suppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnitType> UnitTypes
        {
            get
            {
                if ((_UnitTypes == null))
                {
                    _UnitTypes = base.CreateObjectSet<UnitType>("UnitTypes");
                }
                return _UnitTypes;
            }
        }
        private ObjectSet<UnitType> _UnitTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemGroup> ItemGroups
        {
            get
            {
                if ((_ItemGroups == null))
                {
                    _ItemGroups = base.CreateObjectSet<ItemGroup>("ItemGroups");
                }
                return _ItemGroups;
            }
        }
        private ObjectSet<ItemGroup> _ItemGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseLogs(PurchaseLog purchaseLog)
        {
            base.AddObject("PurchaseLogs", purchaseLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseOrders(PurchaseOrder purchaseOrder)
        {
            base.AddObject("PurchaseOrders", purchaseOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesLogs(SalesLog salesLog)
        {
            base.AddObject("SalesLogs", salesLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SalesOrders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSalesOrders(SalesOrder salesOrder)
        {
            base.AddObject("SalesOrders", salesOrder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StockCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStockCategories(StockCategory stockCategory)
        {
            base.AddObject("StockCategories", stockCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StockItemDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStockItemDetails(StockItemDetail stockItemDetail)
        {
            base.AddObject("StockItemDetails", stockItemDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StockItemMasters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStockItemMasters(StockItemMaster stockItemMaster)
        {
            base.AddObject("StockItemMasters", stockItemMaster);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Suppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuppliers(Supplier supplier)
        {
            base.AddObject("Suppliers", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnitTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnitTypes(UnitType unitType)
        {
            base.AddObject("UnitTypes", unitType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemGroups(ItemGroup itemGroup)
        {
            base.AddObject("ItemGroups", itemGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AFLStock_Model", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="customerId">Initial value of the CustomerId property.</param>
        /// <param name="customerName">Initial value of the CustomerName property.</param>
        public static Customer CreateCustomer(global::System.Int32 customerId, global::System.String customerName)
        {
            Customer customer = new Customer();
            customer.CustomerId = customerId;
            customer.CustomerName = customerName;
            return customer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                if (_CustomerId != value)
                {
                    OnCustomerIdChanging(value);
                    ReportPropertyChanging("CustomerId");
                    _CustomerId = StructuralObject.SetValidValue(value, "CustomerId");
                    ReportPropertyChanged("CustomerId");
                    OnCustomerIdChanged();
                }
            }
        }
        private global::System.Int32 _CustomerId;
        partial void OnCustomerIdChanging(global::System.Int32 value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomerName
        {
            get
            {
                return _CustomerName;
            }
            set
            {
                OnCustomerNameChanging(value);
                ReportPropertyChanging("CustomerName");
                _CustomerName = StructuralObject.SetValidValue(value, false, "CustomerName");
                ReportPropertyChanged("CustomerName");
                OnCustomerNameChanged();
            }
        }
        private global::System.String _CustomerName;
        partial void OnCustomerNameChanging(global::System.String value);
        partial void OnCustomerNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_SalesOrder_Customer", "SalesOrder")]
        public EntityCollection<SalesOrder> SalesOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesOrder>("AFLStock_Model.FK_SalesOrder_Customer", "SalesOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesOrder>("AFLStock_Model.FK_SalesOrder_Customer", "SalesOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AFLStock_Model", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        /// <param name="groupName">Initial value of the GroupName property.</param>
        public static Group CreateGroup(global::System.Int32 groupID, global::System.String groupName)
        {
            Group group = new Group();
            group.GroupID = groupID;
            group.GroupName = groupName;
            return group;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                if (_GroupID != value)
                {
                    OnGroupIDChanging(value);
                    ReportPropertyChanging("GroupID");
                    _GroupID = StructuralObject.SetValidValue(value, "GroupID");
                    ReportPropertyChanged("GroupID");
                    OnGroupIDChanged();
                }
            }
        }
        private global::System.Int32 _GroupID;
        partial void OnGroupIDChanging(global::System.Int32 value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, false, "GroupName");
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_ItemGroups_Groups", "ItemGroup")]
        public EntityCollection<ItemGroup> ItemGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemGroup>("AFLStock_Model.FK_ItemGroups_Groups", "ItemGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemGroup>("AFLStock_Model.FK_ItemGroups_Groups", "ItemGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AFLStock_Model", Name="ItemGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemGroup object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="stockItemID">Initial value of the StockItemID property.</param>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        public static ItemGroup CreateItemGroup(global::System.Int32 id, global::System.Int32 stockItemID, global::System.Int32 groupID)
        {
            ItemGroup itemGroup = new ItemGroup();
            itemGroup.ID = id;
            itemGroup.StockItemID = stockItemID;
            itemGroup.GroupID = groupID;
            return itemGroup;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockItemID
        {
            get
            {
                return _StockItemID;
            }
            set
            {
                OnStockItemIDChanging(value);
                ReportPropertyChanging("StockItemID");
                _StockItemID = StructuralObject.SetValidValue(value, "StockItemID");
                ReportPropertyChanged("StockItemID");
                OnStockItemIDChanged();
            }
        }
        private global::System.Int32 _StockItemID;
        partial void OnStockItemIDChanging(global::System.Int32 value);
        partial void OnStockItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                OnGroupIDChanging(value);
                ReportPropertyChanging("GroupID");
                _GroupID = StructuralObject.SetValidValue(value, "GroupID");
                ReportPropertyChanged("GroupID");
                OnGroupIDChanged();
            }
        }
        private global::System.Int32 _GroupID;
        partial void OnGroupIDChanging(global::System.Int32 value);
        partial void OnGroupIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_ItemGroups_Groups", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("AFLStock_Model.FK_ItemGroups_Groups", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("AFLStock_Model.FK_ItemGroups_Groups", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("AFLStock_Model.FK_ItemGroups_Groups", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("AFLStock_Model.FK_ItemGroups_Groups", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_ItemGroups_StockItemMaster", "StockItemMaster")]
        public StockItemMaster StockItemMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItemMaster>("AFLStock_Model.FK_ItemGroups_StockItemMaster", "StockItemMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItemMaster>("AFLStock_Model.FK_ItemGroups_StockItemMaster", "StockItemMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StockItemMaster> StockItemMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItemMaster>("AFLStock_Model.FK_ItemGroups_StockItemMaster", "StockItemMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StockItemMaster>("AFLStock_Model.FK_ItemGroups_StockItemMaster", "StockItemMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AFLStock_Model", Name="PurchaseLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseLog object.
        /// </summary>
        /// <param name="purchaseLogID">Initial value of the PurchaseLogID property.</param>
        /// <param name="purchaseOrderID">Initial value of the PurchaseOrderID property.</param>
        /// <param name="stockItemID">Initial value of the StockItemID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static PurchaseLog CreatePurchaseLog(global::System.Int32 purchaseLogID, global::System.Int32 purchaseOrderID, global::System.Int32 stockItemID, global::System.Double quantity)
        {
            PurchaseLog purchaseLog = new PurchaseLog();
            purchaseLog.PurchaseLogID = purchaseLogID;
            purchaseLog.PurchaseOrderID = purchaseOrderID;
            purchaseLog.StockItemID = stockItemID;
            purchaseLog.Quantity = quantity;
            return purchaseLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PurchaseLogID
        {
            get
            {
                return _PurchaseLogID;
            }
            set
            {
                if (_PurchaseLogID != value)
                {
                    OnPurchaseLogIDChanging(value);
                    ReportPropertyChanging("PurchaseLogID");
                    _PurchaseLogID = StructuralObject.SetValidValue(value, "PurchaseLogID");
                    ReportPropertyChanged("PurchaseLogID");
                    OnPurchaseLogIDChanged();
                }
            }
        }
        private global::System.Int32 _PurchaseLogID;
        partial void OnPurchaseLogIDChanging(global::System.Int32 value);
        partial void OnPurchaseLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PurchaseOrderID
        {
            get
            {
                return _PurchaseOrderID;
            }
            set
            {
                OnPurchaseOrderIDChanging(value);
                ReportPropertyChanging("PurchaseOrderID");
                _PurchaseOrderID = StructuralObject.SetValidValue(value, "PurchaseOrderID");
                ReportPropertyChanged("PurchaseOrderID");
                OnPurchaseOrderIDChanged();
            }
        }
        private global::System.Int32 _PurchaseOrderID;
        partial void OnPurchaseOrderIDChanging(global::System.Int32 value);
        partial void OnPurchaseOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockItemID
        {
            get
            {
                return _StockItemID;
            }
            set
            {
                OnStockItemIDChanging(value);
                ReportPropertyChanging("StockItemID");
                _StockItemID = StructuralObject.SetValidValue(value, "StockItemID");
                ReportPropertyChanged("StockItemID");
                OnStockItemIDChanged();
            }
        }
        private global::System.Int32 _StockItemID;
        partial void OnStockItemIDChanging(global::System.Int32 value);
        partial void OnStockItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CostCN
        {
            get
            {
                return _CostCN;
            }
            set
            {
                OnCostCNChanging(value);
                ReportPropertyChanging("CostCN");
                _CostCN = StructuralObject.SetValidValue(value, "CostCN");
                ReportPropertyChanged("CostCN");
                OnCostCNChanged();
            }
        }
        private Nullable<global::System.Double> _CostCN;
        partial void OnCostCNChanging(Nullable<global::System.Double> value);
        partial void OnCostCNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CostLK
        {
            get
            {
                return _CostLK;
            }
            set
            {
                OnCostLKChanging(value);
                ReportPropertyChanging("CostLK");
                _CostLK = StructuralObject.SetValidValue(value, "CostLK");
                ReportPropertyChanged("CostLK");
                OnCostLKChanged();
            }
        }
        private Nullable<global::System.Double> _CostLK;
        partial void OnCostLKChanging(Nullable<global::System.Double> value);
        partial void OnCostLKChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_PurchaseLog_PurchaseOrder", "PurchaseOrder")]
        public PurchaseOrder PurchaseOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("AFLStock_Model.FK_PurchaseLog_PurchaseOrder", "PurchaseOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("AFLStock_Model.FK_PurchaseLog_PurchaseOrder", "PurchaseOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseOrder> PurchaseOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseOrder>("AFLStock_Model.FK_PurchaseLog_PurchaseOrder", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseOrder>("AFLStock_Model.FK_PurchaseLog_PurchaseOrder", "PurchaseOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_PurchaseLog_StockItemMaster", "StockItemMaster")]
        public StockItemMaster StockItemMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItemMaster>("AFLStock_Model.FK_PurchaseLog_StockItemMaster", "StockItemMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItemMaster>("AFLStock_Model.FK_PurchaseLog_StockItemMaster", "StockItemMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StockItemMaster> StockItemMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItemMaster>("AFLStock_Model.FK_PurchaseLog_StockItemMaster", "StockItemMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StockItemMaster>("AFLStock_Model.FK_PurchaseLog_StockItemMaster", "StockItemMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AFLStock_Model", Name="PurchaseOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseOrder object.
        /// </summary>
        /// <param name="purchaseOrderID">Initial value of the PurchaseOrderID property.</param>
        /// <param name="supplierID">Initial value of the SupplierID property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        public static PurchaseOrder CreatePurchaseOrder(global::System.Int32 purchaseOrderID, global::System.Int32 supplierID, global::System.DateTime transactionDate)
        {
            PurchaseOrder purchaseOrder = new PurchaseOrder();
            purchaseOrder.PurchaseOrderID = purchaseOrderID;
            purchaseOrder.SupplierID = supplierID;
            purchaseOrder.TransactionDate = transactionDate;
            return purchaseOrder;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PurchaseOrderID
        {
            get
            {
                return _PurchaseOrderID;
            }
            set
            {
                if (_PurchaseOrderID != value)
                {
                    OnPurchaseOrderIDChanging(value);
                    ReportPropertyChanging("PurchaseOrderID");
                    _PurchaseOrderID = StructuralObject.SetValidValue(value, "PurchaseOrderID");
                    ReportPropertyChanged("PurchaseOrderID");
                    OnPurchaseOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _PurchaseOrderID;
        partial void OnPurchaseOrderIDChanging(global::System.Int32 value);
        partial void OnPurchaseOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = StructuralObject.SetValidValue(value, "SupplierID");
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private global::System.Int32 _SupplierID;
        partial void OnSupplierIDChanging(global::System.Int32 value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value, "TransactionDate");
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalReferenceId
        {
            get
            {
                return _ExternalReferenceId;
            }
            set
            {
                OnExternalReferenceIdChanging(value);
                ReportPropertyChanging("ExternalReferenceId");
                _ExternalReferenceId = StructuralObject.SetValidValue(value, true, "ExternalReferenceId");
                ReportPropertyChanged("ExternalReferenceId");
                OnExternalReferenceIdChanged();
            }
        }
        private global::System.String _ExternalReferenceId;
        partial void OnExternalReferenceIdChanging(global::System.String value);
        partial void OnExternalReferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_PurchaseLog_PurchaseOrder", "PurchaseLog")]
        public EntityCollection<PurchaseLog> PurchaseLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseLog>("AFLStock_Model.FK_PurchaseLog_PurchaseOrder", "PurchaseLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseLog>("AFLStock_Model.FK_PurchaseLog_PurchaseOrder", "PurchaseLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_PurchaseOrder_Supplier", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("AFLStock_Model.FK_PurchaseOrder_Supplier", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("AFLStock_Model.FK_PurchaseOrder_Supplier", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("AFLStock_Model.FK_PurchaseOrder_Supplier", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("AFLStock_Model.FK_PurchaseOrder_Supplier", "Supplier", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AFLStock_Model", Name="SalesLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesLog object.
        /// </summary>
        /// <param name="salesLogID">Initial value of the SalesLogID property.</param>
        /// <param name="salesOrderID">Initial value of the SalesOrderID property.</param>
        /// <param name="stockItemID">Initial value of the StockItemID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static SalesLog CreateSalesLog(global::System.Int32 salesLogID, global::System.Int32 salesOrderID, global::System.Int32 stockItemID, global::System.Double quantity)
        {
            SalesLog salesLog = new SalesLog();
            salesLog.SalesLogID = salesLogID;
            salesLog.SalesOrderID = salesOrderID;
            salesLog.StockItemID = stockItemID;
            salesLog.Quantity = quantity;
            return salesLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SalesLogID
        {
            get
            {
                return _SalesLogID;
            }
            set
            {
                if (_SalesLogID != value)
                {
                    OnSalesLogIDChanging(value);
                    ReportPropertyChanging("SalesLogID");
                    _SalesLogID = StructuralObject.SetValidValue(value, "SalesLogID");
                    ReportPropertyChanged("SalesLogID");
                    OnSalesLogIDChanged();
                }
            }
        }
        private global::System.Int32 _SalesLogID;
        partial void OnSalesLogIDChanging(global::System.Int32 value);
        partial void OnSalesLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SalesOrderID
        {
            get
            {
                return _SalesOrderID;
            }
            set
            {
                OnSalesOrderIDChanging(value);
                ReportPropertyChanging("SalesOrderID");
                _SalesOrderID = StructuralObject.SetValidValue(value, "SalesOrderID");
                ReportPropertyChanged("SalesOrderID");
                OnSalesOrderIDChanged();
            }
        }
        private global::System.Int32 _SalesOrderID;
        partial void OnSalesOrderIDChanging(global::System.Int32 value);
        partial void OnSalesOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockItemID
        {
            get
            {
                return _StockItemID;
            }
            set
            {
                OnStockItemIDChanging(value);
                ReportPropertyChanging("StockItemID");
                _StockItemID = StructuralObject.SetValidValue(value, "StockItemID");
                ReportPropertyChanged("StockItemID");
                OnStockItemIDChanged();
            }
        }
        private global::System.Int32 _StockItemID;
        partial void OnStockItemIDChanging(global::System.Int32 value);
        partial void OnStockItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SalePrice
        {
            get
            {
                return _SalePrice;
            }
            set
            {
                OnSalePriceChanging(value);
                ReportPropertyChanging("SalePrice");
                _SalePrice = StructuralObject.SetValidValue(value, "SalePrice");
                ReportPropertyChanged("SalePrice");
                OnSalePriceChanged();
            }
        }
        private Nullable<global::System.Double> _SalePrice;
        partial void OnSalePriceChanging(Nullable<global::System.Double> value);
        partial void OnSalePriceChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_SalesLog_SalesOrder", "SalesOrder")]
        public SalesOrder SalesOrder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesOrder>("AFLStock_Model.FK_SalesLog_SalesOrder", "SalesOrder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesOrder>("AFLStock_Model.FK_SalesLog_SalesOrder", "SalesOrder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SalesOrder> SalesOrderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SalesOrder>("AFLStock_Model.FK_SalesLog_SalesOrder", "SalesOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SalesOrder>("AFLStock_Model.FK_SalesLog_SalesOrder", "SalesOrder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_SalesLog_StockItemMaster", "StockItemMaster")]
        public StockItemMaster StockItemMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItemMaster>("AFLStock_Model.FK_SalesLog_StockItemMaster", "StockItemMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItemMaster>("AFLStock_Model.FK_SalesLog_StockItemMaster", "StockItemMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StockItemMaster> StockItemMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItemMaster>("AFLStock_Model.FK_SalesLog_StockItemMaster", "StockItemMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StockItemMaster>("AFLStock_Model.FK_SalesLog_StockItemMaster", "StockItemMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AFLStock_Model", Name="SalesOrder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SalesOrder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SalesOrder object.
        /// </summary>
        /// <param name="salesOrderID">Initial value of the SalesOrderID property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="transactionDate">Initial value of the TransactionDate property.</param>
        /// <param name="fulfilled">Initial value of the Fulfilled property.</param>
        public static SalesOrder CreateSalesOrder(global::System.Int32 salesOrderID, global::System.Int32 customerID, global::System.DateTime transactionDate, global::System.Boolean fulfilled)
        {
            SalesOrder salesOrder = new SalesOrder();
            salesOrder.SalesOrderID = salesOrderID;
            salesOrder.CustomerID = customerID;
            salesOrder.TransactionDate = transactionDate;
            salesOrder.Fulfilled = fulfilled;
            return salesOrder;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SalesOrderID
        {
            get
            {
                return _SalesOrderID;
            }
            set
            {
                if (_SalesOrderID != value)
                {
                    OnSalesOrderIDChanging(value);
                    ReportPropertyChanging("SalesOrderID");
                    _SalesOrderID = StructuralObject.SetValidValue(value, "SalesOrderID");
                    ReportPropertyChanged("SalesOrderID");
                    OnSalesOrderIDChanged();
                }
            }
        }
        private global::System.Int32 _SalesOrderID;
        partial void OnSalesOrderIDChanging(global::System.Int32 value);
        partial void OnSalesOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value, "CustomerID");
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Int32 _CustomerID;
        partial void OnCustomerIDChanging(global::System.Int32 value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransactionDate
        {
            get
            {
                return _TransactionDate;
            }
            set
            {
                OnTransactionDateChanging(value);
                ReportPropertyChanging("TransactionDate");
                _TransactionDate = StructuralObject.SetValidValue(value, "TransactionDate");
                ReportPropertyChanged("TransactionDate");
                OnTransactionDateChanged();
            }
        }
        private global::System.DateTime _TransactionDate;
        partial void OnTransactionDateChanging(global::System.DateTime value);
        partial void OnTransactionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalReferenceId
        {
            get
            {
                return _ExternalReferenceId;
            }
            set
            {
                OnExternalReferenceIdChanging(value);
                ReportPropertyChanging("ExternalReferenceId");
                _ExternalReferenceId = StructuralObject.SetValidValue(value, true, "ExternalReferenceId");
                ReportPropertyChanged("ExternalReferenceId");
                OnExternalReferenceIdChanged();
            }
        }
        private global::System.String _ExternalReferenceId;
        partial void OnExternalReferenceIdChanging(global::System.String value);
        partial void OnExternalReferenceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SaleDetails
        {
            get
            {
                return _SaleDetails;
            }
            set
            {
                OnSaleDetailsChanging(value);
                ReportPropertyChanging("SaleDetails");
                _SaleDetails = StructuralObject.SetValidValue(value, true, "SaleDetails");
                ReportPropertyChanged("SaleDetails");
                OnSaleDetailsChanged();
            }
        }
        private global::System.String _SaleDetails;
        partial void OnSaleDetailsChanging(global::System.String value);
        partial void OnSaleDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Fulfilled
        {
            get
            {
                return _Fulfilled;
            }
            set
            {
                OnFulfilledChanging(value);
                ReportPropertyChanging("Fulfilled");
                _Fulfilled = StructuralObject.SetValidValue(value, "Fulfilled");
                ReportPropertyChanged("Fulfilled");
                OnFulfilledChanged();
            }
        }
        private global::System.Boolean _Fulfilled;
        partial void OnFulfilledChanging(global::System.Boolean value);
        partial void OnFulfilledChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_SalesOrder_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("AFLStock_Model.FK_SalesOrder_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("AFLStock_Model.FK_SalesOrder_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("AFLStock_Model.FK_SalesOrder_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("AFLStock_Model.FK_SalesOrder_Customer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_SalesLog_SalesOrder", "SalesLog")]
        public EntityCollection<SalesLog> SalesLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesLog>("AFLStock_Model.FK_SalesLog_SalesOrder", "SalesLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesLog>("AFLStock_Model.FK_SalesLog_SalesOrder", "SalesLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AFLStock_Model", Name="StockCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StockCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StockCategory object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        public static StockCategory CreateStockCategory(global::System.Int32 categoryID, global::System.String categoryName)
        {
            StockCategory stockCategory = new StockCategory();
            stockCategory.CategoryID = categoryID;
            stockCategory.CategoryName = categoryName;
            return stockCategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value, "CategoryID");
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false, "CategoryName");
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Quantity_Mutable
        {
            get
            {
                return _Quantity_Mutable;
            }
            set
            {
                OnQuantity_MutableChanging(value);
                ReportPropertyChanging("Quantity_Mutable");
                _Quantity_Mutable = StructuralObject.SetValidValue(value, "Quantity_Mutable");
                ReportPropertyChanged("Quantity_Mutable");
                OnQuantity_MutableChanged();
            }
        }
        private Nullable<global::System.Boolean> _Quantity_Mutable;
        partial void OnQuantity_MutableChanging(Nullable<global::System.Boolean> value);
        partial void OnQuantity_MutableChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_StockItemMaster_StockCategory", "StockItemMaster")]
        public EntityCollection<StockItemMaster> StockItemMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StockItemMaster>("AFLStock_Model.FK_StockItemMaster_StockCategory", "StockItemMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StockItemMaster>("AFLStock_Model.FK_StockItemMaster_StockCategory", "StockItemMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AFLStock_Model", Name="StockItemDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StockItemDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StockItemDetail object.
        /// </summary>
        /// <param name="stockItemDetailID">Initial value of the StockItemDetailID property.</param>
        /// <param name="stockItemMasterID">Initial value of the StockItemMasterID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static StockItemDetail CreateStockItemDetail(global::System.Int32 stockItemDetailID, global::System.Int32 stockItemMasterID, global::System.Double quantity)
        {
            StockItemDetail stockItemDetail = new StockItemDetail();
            stockItemDetail.StockItemDetailID = stockItemDetailID;
            stockItemDetail.StockItemMasterID = stockItemMasterID;
            stockItemDetail.Quantity = quantity;
            return stockItemDetail;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockItemDetailID
        {
            get
            {
                return _StockItemDetailID;
            }
            set
            {
                if (_StockItemDetailID != value)
                {
                    OnStockItemDetailIDChanging(value);
                    ReportPropertyChanging("StockItemDetailID");
                    _StockItemDetailID = StructuralObject.SetValidValue(value, "StockItemDetailID");
                    ReportPropertyChanged("StockItemDetailID");
                    OnStockItemDetailIDChanged();
                }
            }
        }
        private global::System.Int32 _StockItemDetailID;
        partial void OnStockItemDetailIDChanging(global::System.Int32 value);
        partial void OnStockItemDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockItemMasterID
        {
            get
            {
                return _StockItemMasterID;
            }
            set
            {
                OnStockItemMasterIDChanging(value);
                ReportPropertyChanging("StockItemMasterID");
                _StockItemMasterID = StructuralObject.SetValidValue(value, "StockItemMasterID");
                ReportPropertyChanged("StockItemMasterID");
                OnStockItemMasterIDChanged();
            }
        }
        private global::System.Int32 _StockItemMasterID;
        partial void OnStockItemMasterIDChanging(global::System.Int32 value);
        partial void OnStockItemMasterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_StockItemDetail_StockItemMaster", "StockItemMaster")]
        public StockItemMaster StockItemMaster
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItemMaster>("AFLStock_Model.FK_StockItemDetail_StockItemMaster", "StockItemMaster").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItemMaster>("AFLStock_Model.FK_StockItemDetail_StockItemMaster", "StockItemMaster").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StockItemMaster> StockItemMasterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockItemMaster>("AFLStock_Model.FK_StockItemDetail_StockItemMaster", "StockItemMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StockItemMaster>("AFLStock_Model.FK_StockItemDetail_StockItemMaster", "StockItemMaster", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AFLStock_Model", Name="StockItemMaster")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StockItemMaster : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StockItemMaster object.
        /// </summary>
        /// <param name="stockItemID">Initial value of the StockItemID property.</param>
        /// <param name="designNumber">Initial value of the DesignNumber property.</param>
        /// <param name="subCode">Initial value of the SubCode property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="currentStock">Initial value of the CurrentStock property.</param>
        /// <param name="unitType">Initial value of the UnitType property.</param>
        /// <param name="minOrderLevel">Initial value of the MinOrderLevel property.</param>
        /// <param name="cost_FinalUpdated">Initial value of the Cost_FinalUpdated property.</param>
        /// <param name="totalQtySold">Initial value of the TotalQtySold property.</param>
        /// <param name="totalQtyPurchased">Initial value of the TotalQtyPurchased property.</param>
        /// <param name="quantity_Mutable">Initial value of the Quantity_Mutable property.</param>
        public static StockItemMaster CreateStockItemMaster(global::System.Int32 stockItemID, global::System.String designNumber, global::System.String subCode, global::System.Int32 categoryID, global::System.Double currentStock, global::System.String unitType, global::System.Double minOrderLevel, global::System.Double cost_FinalUpdated, global::System.Double totalQtySold, global::System.Double totalQtyPurchased, global::System.Boolean quantity_Mutable)
        {
            StockItemMaster stockItemMaster = new StockItemMaster();
            stockItemMaster.StockItemID = stockItemID;
            stockItemMaster.DesignNumber = designNumber;
            stockItemMaster.SubCode = subCode;
            stockItemMaster.CategoryID = categoryID;
            stockItemMaster.CurrentStock = currentStock;
            stockItemMaster.UnitType = unitType;
            stockItemMaster.MinOrderLevel = minOrderLevel;
            stockItemMaster.Cost_FinalUpdated = cost_FinalUpdated;
            stockItemMaster.TotalQtySold = totalQtySold;
            stockItemMaster.TotalQtyPurchased = totalQtyPurchased;
            stockItemMaster.Quantity_Mutable = quantity_Mutable;
            return stockItemMaster;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StockItemID
        {
            get
            {
                return _StockItemID;
            }
            set
            {
                if (_StockItemID != value)
                {
                    OnStockItemIDChanging(value);
                    ReportPropertyChanging("StockItemID");
                    _StockItemID = StructuralObject.SetValidValue(value, "StockItemID");
                    ReportPropertyChanged("StockItemID");
                    OnStockItemIDChanged();
                }
            }
        }
        private global::System.Int32 _StockItemID;
        partial void OnStockItemIDChanging(global::System.Int32 value);
        partial void OnStockItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DesignNumber
        {
            get
            {
                return _DesignNumber;
            }
            set
            {
                OnDesignNumberChanging(value);
                ReportPropertyChanging("DesignNumber");
                _DesignNumber = StructuralObject.SetValidValue(value, false, "DesignNumber");
                ReportPropertyChanged("DesignNumber");
                OnDesignNumberChanged();
            }
        }
        private global::System.String _DesignNumber;
        partial void OnDesignNumberChanging(global::System.String value);
        partial void OnDesignNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubCode
        {
            get
            {
                return _SubCode;
            }
            set
            {
                OnSubCodeChanging(value);
                ReportPropertyChanging("SubCode");
                _SubCode = StructuralObject.SetValidValue(value, false, "SubCode");
                ReportPropertyChanged("SubCode");
                OnSubCodeChanged();
            }
        }
        private global::System.String _SubCode;
        partial void OnSubCodeChanging(global::System.String value);
        partial void OnSubCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value, "CategoryID");
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CurrentStock
        {
            get
            {
                return _CurrentStock;
            }
            set
            {
                OnCurrentStockChanging(value);
                ReportPropertyChanging("CurrentStock");
                _CurrentStock = StructuralObject.SetValidValue(value, "CurrentStock");
                ReportPropertyChanged("CurrentStock");
                OnCurrentStockChanged();
            }
        }
        private global::System.Double _CurrentStock;
        partial void OnCurrentStockChanging(global::System.Double value);
        partial void OnCurrentStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UnitType
        {
            get
            {
                return _UnitType;
            }
            set
            {
                OnUnitTypeChanging(value);
                ReportPropertyChanging("UnitType");
                _UnitType = StructuralObject.SetValidValue(value, false, "UnitType");
                ReportPropertyChanged("UnitType");
                OnUnitTypeChanged();
            }
        }
        private global::System.String _UnitType;
        partial void OnUnitTypeChanging(global::System.String value);
        partial void OnUnitTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MinOrderLevel
        {
            get
            {
                return _MinOrderLevel;
            }
            set
            {
                OnMinOrderLevelChanging(value);
                ReportPropertyChanging("MinOrderLevel");
                _MinOrderLevel = StructuralObject.SetValidValue(value, "MinOrderLevel");
                ReportPropertyChanged("MinOrderLevel");
                OnMinOrderLevelChanged();
            }
        }
        private global::System.Double _MinOrderLevel;
        partial void OnMinOrderLevelChanging(global::System.Double value);
        partial void OnMinOrderLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Cost_FinalUpdated
        {
            get
            {
                return _Cost_FinalUpdated;
            }
            set
            {
                OnCost_FinalUpdatedChanging(value);
                ReportPropertyChanging("Cost_FinalUpdated");
                _Cost_FinalUpdated = StructuralObject.SetValidValue(value, "Cost_FinalUpdated");
                ReportPropertyChanged("Cost_FinalUpdated");
                OnCost_FinalUpdatedChanged();
            }
        }
        private global::System.Double _Cost_FinalUpdated;
        partial void OnCost_FinalUpdatedChanging(global::System.Double value);
        partial void OnCost_FinalUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalQtySold
        {
            get
            {
                return _TotalQtySold;
            }
            set
            {
                OnTotalQtySoldChanging(value);
                ReportPropertyChanging("TotalQtySold");
                _TotalQtySold = StructuralObject.SetValidValue(value, "TotalQtySold");
                ReportPropertyChanged("TotalQtySold");
                OnTotalQtySoldChanged();
            }
        }
        private global::System.Double _TotalQtySold;
        partial void OnTotalQtySoldChanging(global::System.Double value);
        partial void OnTotalQtySoldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TotalQtyPurchased
        {
            get
            {
                return _TotalQtyPurchased;
            }
            set
            {
                OnTotalQtyPurchasedChanging(value);
                ReportPropertyChanging("TotalQtyPurchased");
                _TotalQtyPurchased = StructuralObject.SetValidValue(value, "TotalQtyPurchased");
                ReportPropertyChanged("TotalQtyPurchased");
                OnTotalQtyPurchasedChanged();
            }
        }
        private global::System.Double _TotalQtyPurchased;
        partial void OnTotalQtyPurchasedChanging(global::System.Double value);
        partial void OnTotalQtyPurchasedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Quantity_Mutable
        {
            get
            {
                return _Quantity_Mutable;
            }
            set
            {
                OnQuantity_MutableChanging(value);
                ReportPropertyChanging("Quantity_Mutable");
                _Quantity_Mutable = StructuralObject.SetValidValue(value, "Quantity_Mutable");
                ReportPropertyChanged("Quantity_Mutable");
                OnQuantity_MutableChanged();
            }
        }
        private global::System.Boolean _Quantity_Mutable;
        partial void OnQuantity_MutableChanging(global::System.Boolean value);
        partial void OnQuantity_MutableChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_PurchaseLog_StockItemMaster", "PurchaseLog")]
        public EntityCollection<PurchaseLog> PurchaseLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseLog>("AFLStock_Model.FK_PurchaseLog_StockItemMaster", "PurchaseLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseLog>("AFLStock_Model.FK_PurchaseLog_StockItemMaster", "PurchaseLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_SalesLog_StockItemMaster", "SalesLog")]
        public EntityCollection<SalesLog> SalesLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SalesLog>("AFLStock_Model.FK_SalesLog_StockItemMaster", "SalesLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SalesLog>("AFLStock_Model.FK_SalesLog_StockItemMaster", "SalesLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_StockItemMaster_StockCategory", "StockCategory")]
        public StockCategory StockCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockCategory>("AFLStock_Model.FK_StockItemMaster_StockCategory", "StockCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockCategory>("AFLStock_Model.FK_StockItemMaster_StockCategory", "StockCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StockCategory> StockCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StockCategory>("AFLStock_Model.FK_StockItemMaster_StockCategory", "StockCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StockCategory>("AFLStock_Model.FK_StockItemMaster_StockCategory", "StockCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_StockItemDetail_StockItemMaster", "StockItemDetail")]
        public EntityCollection<StockItemDetail> StockItemDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StockItemDetail>("AFLStock_Model.FK_StockItemDetail_StockItemMaster", "StockItemDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StockItemDetail>("AFLStock_Model.FK_StockItemDetail_StockItemMaster", "StockItemDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_StockItemMaster_UnitType", "UnitType")]
        public UnitType UnitType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitType>("AFLStock_Model.FK_StockItemMaster_UnitType", "UnitType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitType>("AFLStock_Model.FK_StockItemMaster_UnitType", "UnitType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnitType> UnitType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnitType>("AFLStock_Model.FK_StockItemMaster_UnitType", "UnitType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnitType>("AFLStock_Model.FK_StockItemMaster_UnitType", "UnitType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_ItemGroups_StockItemMaster", "ItemGroup")]
        public EntityCollection<ItemGroup> ItemGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ItemGroup>("AFLStock_Model.FK_ItemGroups_StockItemMaster", "ItemGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ItemGroup>("AFLStock_Model.FK_ItemGroups_StockItemMaster", "ItemGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AFLStock_Model", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="supplerID">Initial value of the SupplerID property.</param>
        /// <param name="supplierName">Initial value of the SupplierName property.</param>
        public static Supplier CreateSupplier(global::System.Int32 supplerID, global::System.String supplierName)
        {
            Supplier supplier = new Supplier();
            supplier.SupplerID = supplerID;
            supplier.SupplierName = supplierName;
            return supplier;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupplerID
        {
            get
            {
                return _SupplerID;
            }
            set
            {
                if (_SupplerID != value)
                {
                    OnSupplerIDChanging(value);
                    ReportPropertyChanging("SupplerID");
                    _SupplerID = StructuralObject.SetValidValue(value, "SupplerID");
                    ReportPropertyChanged("SupplerID");
                    OnSupplerIDChanged();
                }
            }
        }
        private global::System.Int32 _SupplerID;
        partial void OnSupplerIDChanging(global::System.Int32 value);
        partial void OnSupplerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupplierName
        {
            get
            {
                return _SupplierName;
            }
            set
            {
                OnSupplierNameChanging(value);
                ReportPropertyChanging("SupplierName");
                _SupplierName = StructuralObject.SetValidValue(value, false, "SupplierName");
                ReportPropertyChanged("SupplierName");
                OnSupplierNameChanged();
            }
        }
        private global::System.String _SupplierName;
        partial void OnSupplierNameChanging(global::System.String value);
        partial void OnSupplierNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RunningDebt
        {
            get
            {
                return _RunningDebt;
            }
            set
            {
                OnRunningDebtChanging(value);
                ReportPropertyChanging("RunningDebt");
                _RunningDebt = StructuralObject.SetValidValue(value, "RunningDebt");
                ReportPropertyChanged("RunningDebt");
                OnRunningDebtChanged();
            }
        }
        private Nullable<global::System.Double> _RunningDebt;
        partial void OnRunningDebtChanging(Nullable<global::System.Double> value);
        partial void OnRunningDebtChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_PurchaseOrder_Supplier", "PurchaseOrder")]
        public EntityCollection<PurchaseOrder> PurchaseOrders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PurchaseOrder>("AFLStock_Model.FK_PurchaseOrder_Supplier", "PurchaseOrder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PurchaseOrder>("AFLStock_Model.FK_PurchaseOrder_Supplier", "PurchaseOrder", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AFLStock_Model", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AFLStock_Model", Name="UnitType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnitType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnitType object.
        /// </summary>
        /// <param name="unitType1">Initial value of the UnitType1 property.</param>
        public static UnitType CreateUnitType(global::System.String unitType1)
        {
            UnitType unitType = new UnitType();
            unitType.UnitType1 = unitType1;
            return unitType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UnitType1
        {
            get
            {
                return _UnitType1;
            }
            set
            {
                if (_UnitType1 != value)
                {
                    OnUnitType1Changing(value);
                    ReportPropertyChanging("UnitType1");
                    _UnitType1 = StructuralObject.SetValidValue(value, false, "UnitType1");
                    ReportPropertyChanged("UnitType1");
                    OnUnitType1Changed();
                }
            }
        }
        private global::System.String _UnitType1;
        partial void OnUnitType1Changing(global::System.String value);
        partial void OnUnitType1Changed();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AFLStock_Model", "FK_StockItemMaster_UnitType", "StockItemMaster")]
        public EntityCollection<StockItemMaster> StockItemMasters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StockItemMaster>("AFLStock_Model.FK_StockItemMaster_UnitType", "StockItemMaster");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StockItemMaster>("AFLStock_Model.FK_StockItemMaster_UnitType", "StockItemMaster", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
